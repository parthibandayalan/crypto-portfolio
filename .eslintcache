[{"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\index.js":"1","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\App.js":"2","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\reportWebVitals.js":"3","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ConfigureStore.js":"4","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Authentication.js":"5","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Snackbar.js":"6","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\CoinDucks.js":"7","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\rootSaga.js":"8","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\ErrorPage.jsx":"9","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CustomizedSnackBar.jsx":"10","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\LoginPage.jsx":"11","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\Dashboard.jsx":"12","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\handlers\\CoinHandlers.js":"13","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\handlers\\Authentication.js":"14","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\LightChartComponent.jsx":"15","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CryptoChart.jsx":"16","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\AddCoin.jsx":"17","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\PortfolioCards.jsx":"18","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\services\\BinanceHistoryDataAPI.js":"19","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\services\\PortfolioServices.js":"20","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\requests\\Authentication.js":"21","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\Chart.jsx":"22","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CryptoCard.jsx":"23","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Trigger.js":"24"},{"size":817,"mtime":1610022568340,"results":"25","hashOfConfig":"26"},{"size":634,"mtime":1610024660329,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1532,"mtime":1611927541144,"results":"29","hashOfConfig":"26"},{"size":902,"mtime":1610733371110,"results":"30","hashOfConfig":"26"},{"size":861,"mtime":1610127501813,"results":"31","hashOfConfig":"26"},{"size":1165,"mtime":1611927253334,"results":"32","hashOfConfig":"26"},{"size":614,"mtime":1610262477786,"results":"33","hashOfConfig":"26"},{"size":105,"mtime":1609682728654,"results":"34","hashOfConfig":"26"},{"size":1424,"mtime":1610025246329,"results":"35","hashOfConfig":"26"},{"size":5026,"mtime":1610737890638,"results":"36","hashOfConfig":"26"},{"size":8310,"mtime":1611930090546,"results":"37","hashOfConfig":"26"},{"size":1731,"mtime":1611929375643,"results":"38","hashOfConfig":"26"},{"size":2941,"mtime":1611592278832,"results":"39","hashOfConfig":"26"},{"size":3515,"mtime":1611312381665,"results":"40","hashOfConfig":"26"},{"size":8055,"mtime":1610028430310,"results":"41","hashOfConfig":"26"},{"size":1915,"mtime":1611929384922,"results":"42","hashOfConfig":"26"},{"size":2356,"mtime":1611930044148,"results":"43","hashOfConfig":"26"},{"size":1513,"mtime":1611331713499,"results":"44","hashOfConfig":"26"},{"size":898,"mtime":1611905660209,"results":"45","hashOfConfig":"26"},{"size":1941,"mtime":1611671385542,"results":"46","hashOfConfig":"26"},{"size":174,"mtime":1609662732825,"results":"47","hashOfConfig":"26"},{"size":2037,"mtime":1611905660203,"results":"48","hashOfConfig":"26"},{"size":559,"mtime":1611925655923,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"16a2n06",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\index.js",[],["107","108"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\App.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\reportWebVitals.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ConfigureStore.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Authentication.js",["109"],"export const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\nconst SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\n\r\nexport const loginUser = (data) => ({\r\n  type: LOGIN_USER,\r\n  payload: data,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\nexport const refreshToken = () => ({\r\n  type: REFRESH_TOKEN,\r\n});\r\n\r\nexport const setAuthenticated = (authenticated, username, name) => ({\r\n  type: SET_AUTHENTICATED,\r\n  authenticated,\r\n  username,\r\n  name,\r\n});\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  username: null,\r\n  name: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      const { authenticated, username, name } = action;\r\n      return { ...state, authenticated, username, name };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Snackbar.js",["110"],"export const SET_SNACKBAR = \"SET_SNACKBAR\";\r\n\r\nconst initialState = {\r\n  snackbarOpen: false,\r\n  snackbarType: \"success\",\r\n  snackbarMessage: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      const { snackbarOpen, snackbarMessage, snackbarType } = action;\r\n      /*console.log(\r\n        \"SET SNACKBAR Reducer\" +\r\n          snackbarOpen +\r\n          \" \" +\r\n          snackbarMessage +\r\n          \" \" +\r\n          snackbarType\r\n      );*/\r\n      return {\r\n        ...state,\r\n        snackbarOpen,\r\n        snackbarType,\r\n        snackbarMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setSnackbar = (\r\n  snackbarOpen,\r\n  snackbarType = \"success\",\r\n  snackbarMessage = \"\"\r\n) => ({\r\n  type: SET_SNACKBAR,\r\n  snackbarOpen,\r\n  snackbarType,\r\n  snackbarMessage,\r\n});\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\CoinDucks.js",["111","112"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\rootSaga.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\ErrorPage.jsx",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CustomizedSnackBar.jsx",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\LoginPage.jsx",["113","114","115","116","117","118"],"import React, { Component, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../redux/ducks/Authentication\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  FormGroup,\r\n  Typography,\r\n  TextField,\r\n  Paper,\r\n  MenuItem,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { ErrorMessage, Form, Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  loginPaper: {\r\n    height: \"90vh\",\r\n  },\r\n  buttonBlock: {\r\n    width: \"70%\",\r\n  },\r\n});\r\n\r\nexport default function LoginPage() {\r\n  let errorVisible = false;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth.authenticated);\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect : \" + auth);\r\n    if (auth) history.push(\"/\");\r\n    else {\r\n      errorVisible = true;\r\n      console.log(\"value changed: \" + errorVisible);\r\n    }\r\n  }, [auth]);\r\n\r\n  //console.log(classes);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={0} direction=\"row\" justify=\"center\">\r\n        <Grid\r\n          item\r\n          container\r\n          spacing={2}\r\n          direction=\"column\"\r\n          xs={2}\r\n          justify=\"center\"\r\n          className={classes.loginPaper}\r\n        >\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={Yup.object().shape({\r\n              username: Yup.string().required(\"Username is required\"),\r\n              password: Yup.string().required(\"Password is required\"),\r\n            })}\r\n            onSubmit={(values, formikHelpers) => {\r\n              // console.log(\"Submition Done\");\r\n              // console.log(values);\r\n              dispatch(loginUser(values)).then(() => history.push(\"/\"));\r\n              //dispatch(loginUser(values));\r\n              // errorVisible = true;\r\n              // console.log(\"dispatch done outside :\" + auth);\r\n            }}\r\n          >\r\n            {({ values, errors, isSubmitting, isValidating }) => (\r\n              <Paper\r\n                variant=\"elevation\"\r\n                elevation={2}\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <Grid item>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Form>\r\n                    <Grid item>\r\n                      <Field\r\n                        required\r\n                        name=\"username\"\r\n                        type=\"string\"\r\n                        as={TextField}\r\n                        label=\"Username\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <ErrorMessage name=\"username\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Field\r\n                        required\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        as={TextField}\r\n                        label=\"Password\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <ErrorMessage name=\"password\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {!auth && errorVisible && (\r\n                        <div>Invalid Username or password</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Box marginBottom={2}>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                          disabled={isSubmitting || isValidating}\r\n                          className={classes.buttonBlock}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                    {/* <Box marginBottom={2}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"reset\"\r\n                        disabled={isSubmitting || isValidating}\r\n                      >\r\n                        Reset\r\n                      </Button>\r\n                    </Box> */}\r\n                  </Form>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot Password?\r\n                  </Link>\r\n                </Grid>\r\n              </Paper>\r\n            )}\r\n          </Formik>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\pages\\Dashboard.jsx",["119","120","121","122","123"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\handlers\\CoinHandlers.js",["124"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\handlers\\Authentication.js",["125","126","127"],"import { call, put } from \"redux-saga/effects\";\r\nimport { setAuthenticated } from \"../../ducks/Authentication\";\r\nimport {\r\n  authenticateUser,\r\n  refreshToken,\r\n  cancelToken,\r\n} from \"../requests/Authentication\";\r\nimport { refreshToken as refresh } from \"../../ducks/Authentication\";\r\nimport store from \"../../ConfigureStore\";\r\nimport { setSnackbar } from \"../../ducks/Snackbar\";\r\nimport { getPortfolio } from \"../../sagas/requests/Authentication\";\r\nimport { addCoin, resetCoins } from \"../../ducks/CoinDucks\";\r\n\r\nexport function* handleLoginUser(action) {\r\n  try {\r\n    console.log(\"handler caught\");\r\n\r\n    const response = yield call(authenticateUser, action.payload);\r\n    console.log(\"handler caught response : \" + JSON.stringify(response));\r\n\r\n    let authentication = false;\r\n    let username = action.payload.username;\r\n    let coins = null;\r\n    let name = \"\";\r\n    if (response.status === 200) {\r\n      authentication = true;\r\n      const res = yield call(getPortfolio, username);\r\n      localStorage.setItem(\"portfolio\", JSON.stringify(res));\r\n      username = res.username;\r\n      name = res.name;\r\n      coins = res.coins;\r\n      yield put(resetCoins());\r\n      console.log(\"Response : \" + JSON.stringify(name));\r\n      for (const [key, value] of Object.entries(coins)) {\r\n        yield put(addCoin(key, value));\r\n        console.log(key, value);\r\n      }\r\n    }\r\n    //const { authentication } = response;\r\n    yield put(setAuthenticated(authentication, username, name));\r\n    yield put(setSnackbar(true, \"success\", \"Log In Successful\"));\r\n  } catch (error) {\r\n    console.log(\"Error caught : \" + error);\r\n    let authentication = false;\r\n    let username = null;\r\n    yield put(setAuthenticated(authentication));\r\n    yield put(setSnackbar(true, \"error\", \"Log In UnSuccessful\"));\r\n  }\r\n}\r\n\r\nexport function* handleRefreshToken(action) {\r\n  try {\r\n    console.log(\"handler caught\");\r\n    const response = yield call(refreshToken);\r\n    console.log(\"handler caught response : \" + JSON.stringify(response));\r\n    let authentication = false;\r\n    if (response.status === 200) {\r\n      authentication = true;\r\n    }\r\n    //const { authentication } = response;\r\n    yield put(setAuthenticated(authentication));\r\n  } catch (error) {\r\n    let authentication = false;\r\n    yield put(setAuthenticated(authentication));\r\n    //console.log(error);\r\n  }\r\n}\r\n\r\nexport function* handleLogoutUser(action) {\r\n  try {\r\n    const response = yield call(cancelToken);\r\n    console.log(\"handler caught response : \" + JSON.stringify(response));\r\n    //const { authentication } = response;\r\n    yield put(resetCoins());\r\n    yield put(setAuthenticated(false, null, null));\r\n    yield put(setSnackbar(true, \"success\", \"Log Out Successful\"));\r\n  } catch (error) {\r\n    yield put(resetCoins());\r\n    yield put(setAuthenticated(false, null, null));\r\n    yield put(setSnackbar(true, \"success\", \"Log Out Successful\"));\r\n    //console.log(error);\r\n  }\r\n}\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\LightChartComponent.jsx",["128"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"kaktana-react-lightweight-charts\";\r\nimport getHistoricalData from \"./../services/BinanceHistoryDataAPI\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function LightChartComponent() {\r\n  // URL connection\r\n  /*const miniTicker = new WebSocket(\r\n    \"wss://dex.binance.org/api/ws/BNB_BTCB-1D@miniTicker\"\r\n  );*/\r\n\r\n  // Or Subscribe method\r\n\r\n  const location = useLocation();\r\n\r\n  //console.log(JSON.stringify(location.state.coinCode));\r\n\r\n  const options = {\r\n    alignLabels: true,\r\n    timeScale: {\r\n      rightOffset: 12,\r\n      barSpacing: 3,\r\n      fixLeftEdge: true,\r\n      lockVisibleTimeRangeOnResize: true,\r\n      rightBarStaysOnScroll: true,\r\n      borderVisible: false,\r\n      borderColor: \"#fff000\",\r\n      visible: true,\r\n      timeVisible: true,\r\n      secondsVisible: false,\r\n    },\r\n  };\r\n\r\n  const [lineSeries, setLineSeries] = useState([\r\n    {\r\n      data: [],\r\n    },\r\n  ]);\r\n\r\n  /////below code is for getting historical data and setting up the lineSeries data\r\n  /* {\r\n          time: \"2018-10-19\",\r\n          value: 180.34,\r\n        },\r\n        {\r\n          time: \"2018-10-22\",\r\n          value: 180.82,\r\n        },\r\n        {\r\n          time: \"2018-10-23\",\r\n          value: 175.77,\r\n        },\r\n        {\r\n          time: \"2018-10-24\",\r\n          value: 178.58,\r\n        },\r\n        {\r\n          time: \"2018-10-25\",\r\n          value: 177.52,\r\n        },\r\n        {\r\n          time: \"2018-10-26\",\r\n          value: 176.88,\r\n        },\r\n        {\r\n          time: \"2018-10-29\",\r\n          value: 173.74,\r\n        },\r\n        {\r\n          time: \"2018-10-30\",\r\n          value: 173.16,\r\n        },\r\n        {\r\n          time: \"2018-10-31\",\r\n          value: 177.98,\r\n        },\r\n        const lineSeries = [\r\n    {\r\n      data: [],\r\n    },\r\n  ];*/\r\n\r\n  useEffect(() => {\r\n    //lineSeries[0][\"data\"].push(incomingData);\r\n    // console.log(\r\n    //   lineSeries[0][\"data\"].push({ time: \"2018-11-01\", value: 180.98 })\r\n    // );\r\n    getHistoricalData(location.state.coinCode)\r\n      .then((incD) => {\r\n        //console.log(\"received by the component : \" + JSON.stringify(incD));\r\n        //setIncomingData(incD);\r\n        const oldLineData = lineSeries[0][\"data\"];\r\n        const newLineSeries = [\r\n          {\r\n            data: [...oldLineData, ...incD],\r\n          },\r\n        ];\r\n        setLineSeries(newLineSeries);\r\n        //console.log(\"received by the component : \");\r\n        //console.log(newLineSeries);\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }, [location.state.coinCode]);\r\n\r\n  //////////below code is for websocket\r\n\r\n  const API_WS =\r\n    \"wss://stream.binance.com:9443/ws/\" +\r\n    location.state.coinCode +\r\n    \"usdt@kline_10m\";\r\n  const conn = new WebSocket(API_WS);\r\n\r\n  conn.onmessage = (e) => {\r\n    // console.log(\"value : \");\r\n    // console.log(e.data);\r\n    var newKlineMap = JSON.parse(e.data);\r\n    const newPoint = {\r\n      time: newKlineMap.k.t / 1000,\r\n      value: parseFloat(newKlineMap.k.o),\r\n    };\r\n\r\n    // console.log(newKlineMap.k.t + \" \" + newKlineMap.k.o);\r\n    // console.log(\"Value : \" + newPoint.value);\r\n    const oldLineData = lineSeries[0][\"data\"];\r\n    const newLineSeries = [\r\n      {\r\n        data: [...oldLineData, newPoint],\r\n      },\r\n    ];\r\n    setLineSeries(newLineSeries);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart options={options} lineSeries={lineSeries} autoWidth height={800} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CryptoChart.jsx",["129"],"import React, { Component } from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { compose } from \"recompose\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  \"chart-container\": {\r\n    height: 400,\r\n    width: 900,\r\n  },\r\n});\r\n\r\nclass CryptoChart extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pairing: this.props.location.state.coinCode + \"-USD\",\r\n      lineChartData: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            type: \"line\",\r\n            label: this.props.location.state.coinCode + \"-USD\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n            borderColor: this.props.theme.palette.primary.main,\r\n            pointBackgroundColor: this.props.theme.palette.secondary.main,\r\n            pointBorderColor: this.props.theme.palette.secondary.main,\r\n            borderWidth: \"2\",\r\n            lineTension: 0.45,\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      lineChartOptions: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n          enabled: true,\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 10,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n  }*/\r\n\r\n  state = {\r\n    pairing: this.props.location.state.coinCode + \"-USD\",\r\n    lineChartData: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          type: \"line\",\r\n          label: this.props.location.state.coinCode + \"-USD\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          borderColor: this.props.theme.palette.primary.main,\r\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\r\n          pointBorderColor: this.props.theme.palette.secondary.main,\r\n          borderWidth: \"2\",\r\n          lineTension: 0.45,\r\n          data: [],\r\n        },\r\n      ],\r\n    },\r\n    lineChartOptions: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      tooltips: {\r\n        enabled: true,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              autoSkip: true,\r\n              maxTicksLimit: 10,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Rerender happend\");\r\n    this.ws = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\r\n    //this.createGDXSocket(this.props.location.state.coinCode);\r\n\r\n    const oldBtcDataSet = this.state.lineChartData.datasets[0];\r\n    const newBtcDataSet = { ...oldBtcDataSet };\r\n    newBtcDataSet.label = this.props.location.state.coinCode + \"-USD\";\r\n    const newChartData = {\r\n      ...this.state.lineChartData,\r\n      datasets: [newBtcDataSet],\r\n    };\r\n    console.log(\r\n      \"Inside Mounting Function : \" +\r\n        this.props.location.state.coinCode +\r\n        \"-USD\"\r\n    );\r\n\r\n    this.setState({\r\n      pairing: this.props.location.state.coinCode + \"-USD\",\r\n      lineChartData: newChartData,\r\n    });\r\n\r\n    const subscribe = {\r\n      type: \"subscribe\",\r\n      channels: [\r\n        {\r\n          name: \"ticker\",\r\n          product_ids: [this.state.pairing],\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.ws.onopen = () => {\r\n      this.ws.send(JSON.stringify(subscribe));\r\n      console.log(\" subscribe send : \" + JSON.stringify(subscribe));\r\n    };\r\n\r\n    //below code is replaced by a call to sendmessage function\r\n    /*this.ws.onopen = () => {\r\n      this.ws.send(JSON.stringify(subscribe));\r\n      console.log(\" subscribe send : \" + JSON.stringify(subscribe));\r\n    };*/\r\n\r\n    this.ws.onmessage = (e) => {\r\n      const value = JSON.parse(e.data);\r\n      console.log(\"value : \" + JSON.stringify(value));\r\n      if (value.type !== \"ticker\" || value.product_id !== this.state.pairing) {\r\n        return;\r\n      }\r\n      //console.log(\"value : \" + JSON.stringify(value));\r\n      const oldBtcDataSet = this.state.lineChartData.datasets[0];\r\n      const newBtcDataSet = { ...oldBtcDataSet };\r\n      newBtcDataSet.data.push(value.price);\r\n      const newChartData = {\r\n        ...this.state.lineChartData,\r\n        datasets: [newBtcDataSet],\r\n        labels: this.state.lineChartData.labels.concat(\r\n          new Date().toLocaleTimeString()\r\n        ),\r\n      };\r\n      this.setState({ lineChartData: newChartData });\r\n    };\r\n  }\r\n\r\n  /*sendMessage = (msg) => {\r\n    // Wait until the state of the socket is not ready and send the message when it is...\r\n    waitForSocketConnection(function () {\r\n      this.ws.send(JSON.stringify(msg));\r\n      console.log(\" subscribe send : \" + JSON.stringify(msg));\r\n    });\r\n  };\r\n\r\n  // Make the function wait until the connection is made...\r\n  waitForSocketConnection = (callback) => {\r\n    setTimeout(function () {\r\n      if (this.ws.readyState === 1) {\r\n        console.log(\"Connection is made\");\r\n        if (callback != null) {\r\n          callback();\r\n        }\r\n      } else {\r\n        console.log(\"wait for connection...\");\r\n        waitForSocketConnection(callback);\r\n      }\r\n    }, 5); // wait 5 milisecond for the connection...\r\n  };*/\r\n\r\n  createGDXSocket(coinCode) {\r\n    const oldBtcDataSet = this.state.lineChartData.datasets[0];\r\n    const newBtcDataSet = { ...oldBtcDataSet };\r\n    newBtcDataSet.data = [];\r\n    newBtcDataSet.label = this.props.location.state.coinCode + \"-USD\";\r\n    const newChartData = {\r\n      ...this.state.lineChartData,\r\n      datasets: [newBtcDataSet],\r\n      labels: [],\r\n    };\r\n    console.log(\r\n      \"Inside GDX Socket Function : \" +\r\n        this.props.location.state.coinCode +\r\n        \"-USD\"\r\n    );\r\n    console.log(\"Check 1\");\r\n    this.setState({ pairing: this.props.location.state.coinCode + \"-USD\" });\r\n    this.setState({ lineChartData: newChartData });\r\n    console.log(\"Check 2\");\r\n    const subscribe = {\r\n      type: \"subscribe\",\r\n      channels: [\r\n        {\r\n          name: \"ticker\",\r\n          product_ids: [this.props.location.state.coinCode + \"-USD\"],\r\n        },\r\n      ],\r\n    };\r\n\r\n    if (this.ws.readyState === 1) {\r\n      this.ws.send(JSON.stringify(subscribe));\r\n      console.log(\" subscribe send : \" + JSON.stringify(subscribe));\r\n    }\r\n\r\n    //below code is replaced by a call to sendmessage function\r\n    /*this.ws.onopen = () => {\r\n      this.ws.send(JSON.stringify(subscribe));\r\n      console.log(\" subscribe send : \" + JSON.stringify(subscribe));\r\n    };\r\n\r\n    this.ws.onmessage = (e) => {\r\n      const value = JSON.parse(e.data);\r\n      if (value.type !== \"ticker\") {\r\n        return;\r\n      }\r\n\r\n      const oldBtcDataSet = this.state.lineChartData.datasets[0];\r\n      const newBtcDataSet = { ...oldBtcDataSet };\r\n      newBtcDataSet.data.push(value.price);\r\n      const newChartData = {\r\n        ...this.state.lineChartData,\r\n        datasets: [newBtcDataSet],\r\n        labels: this.state.lineChartData.labels.concat(\r\n          new Date().toLocaleTimeString()\r\n        ),\r\n      };\r\n      this.setState({ lineChartData: newChartData });\r\n    };*/\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let newPairing = this.props.location.state.coinCode + \"-USD\";\r\n    let prevPairing = prevProps.location.state.coinCode + \"-USD\";\r\n    if (newPairing.localeCompare(prevPairing) != 0) {\r\n      //this.forceUpdate();\r\n      console.log(\"New State : \" + newPairing);\r\n      console.log(\"Previous State : \" + prevPairing);\r\n      console.log(\"Component updates\");\r\n      this.createGDXSocket(this.props.location.state.coinCode);\r\n      //this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.ws.close();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes[\"chart-container\"]}>\r\n        <Chart\r\n          data={this.state.lineChartData}\r\n          options={this.state.lineChartOptions}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withStyles(styles, { withTheme: true })\r\n)(CryptoChart);\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\AddCoin.jsx",["130"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\PortfolioCards.jsx",["131","132","133","134","135"],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\services\\BinanceHistoryDataAPI.js",["136","137"],"import axios from \"axios\";\r\n\r\nexport default async function getHistoricalData(symbol) {\r\n  const pairing = symbol + \"USDT\";\r\n\r\n  //https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=1000\r\n  //axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\r\n  const instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n  });\r\n\r\n  return instance\r\n    .get(`https://api.binance.com/api/v3/klines`, {\r\n      params: { symbol: pairing, interval: \"1d\", limit: 1000 },\r\n    })\r\n    .then((res) => {\r\n      const cdata = res.data.map((d) => {\r\n        return {\r\n          time: d[0] / 1000,\r\n          value: parseFloat(d[1]),\r\n        };\r\n      });\r\n      //console.log(\"immediatly after fetching from api : \");\r\n      //console.log(cdata);\r\n      return cdata;\r\n    })\r\n    .catch((error) => {\r\n      throw \"Invalid Symbol\";\r\n    });\r\n}\r\n\r\nexport async function getAveragePrice(symbol) {\r\n  const pairing = symbol + \"USDT\";\r\n\r\n  //https://api.binance.com/api/v3/klines?symbol=ETHUSDT&interval=1d&limit=1000\r\n  //axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\r\n  const instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n  });\r\n\r\n  return instance\r\n    .get(`https://api.binance.com/api/v3/avgPrice`, {\r\n      params: { symbol: pairing },\r\n    })\r\n    .then((res) => {\r\n      //console.log(res.data.price);\r\n      return res.data.price;\r\n    })\r\n    .catch((error) => {\r\n      throw \"Invalid Symbol \" + JSON.stringify(error);\r\n    });\r\n}\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\services\\PortfolioServices.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\sagas\\requests\\Authentication.js",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\Chart.jsx",[],"C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\components\\CryptoCard.jsx",["138","139"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { getAveragePrice } from \"../services/BinanceHistoryDataAPI\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: 200,\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nexport default function CryptoCard(props) {\r\n  const classes = useStyles();\r\n  const { symbol, tokens, currentTotalValue, parentCallback } = props;\r\n\r\n  const title = symbol + \"-USD\";\r\n\r\n  const [rate, setRate] = useState(0.0);\r\n\r\n  useInterval(() => {\r\n    // console.log(\"Interval running in the background \" + JSON.stringify(symbol));\r\n    getAveragePrice(symbol)\r\n      .then((res) => {\r\n        setRate(parseFloat(res));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, 1000);\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={title} />\r\n        <CardContent>\r\n          <Typography>\r\n            Rate :{\" \"}\r\n            {rate.toLocaleString(\"en-US\", {\r\n              style: \"currency\",\r\n              currency: \"USD\",\r\n            })}\r\n          </Typography>\r\n          <Typography>Tokens : {tokens}</Typography>\r\n          <Typography>\r\n            Value :{\" \"}\r\n            {(parseFloat(rate) * parseFloat(tokens)).toLocaleString(\"en-US\", {\r\n              style: \"currency\",\r\n              currency: \"USD\",\r\n            })}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","C:\\dev\\workspace\\crypto-portfolio\\crypto-portfolio\\src\\redux\\ducks\\Trigger.js",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":32,"column":1,"nodeType":"147","endLine":40,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":9,"column":1,"nodeType":"147","endLine":30,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":10,"column":1,"nodeType":"147","endLine":32,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":23,"column":11,"nodeType":"150","messageId":"151","endLine":23,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"150","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"155","line":6,"column":3,"nodeType":"150","messageId":"154","endLine":6,"endColumn":7},{"ruleId":"152","severity":1,"message":"156","line":7,"column":3,"nodeType":"150","messageId":"154","endLine":7,"endColumn":14},{"ruleId":"152","severity":1,"message":"157","line":8,"column":3,"nodeType":"150","messageId":"154","endLine":8,"endColumn":12},{"ruleId":"152","severity":1,"message":"158","line":12,"column":3,"nodeType":"150","messageId":"154","endLine":12,"endColumn":11},{"ruleId":"159","severity":1,"message":"160","line":47,"column":22,"nodeType":"161","endLine":47,"endColumn":26},{"ruleId":"152","severity":1,"message":"162","line":3,"column":8,"nodeType":"150","messageId":"154","endLine":3,"endColumn":12},{"ruleId":"152","severity":1,"message":"163","line":6,"column":3,"nodeType":"150","messageId":"154","endLine":6,"endColumn":13},{"ruleId":"152","severity":1,"message":"164","line":108,"column":9,"nodeType":"150","messageId":"154","endLine":108,"endColumn":17},{"ruleId":"159","severity":1,"message":"165","line":133,"column":6,"nodeType":"166","endLine":133,"endColumn":14,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"168","line":135,"column":9,"nodeType":"150","messageId":"154","endLine":135,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":17,"column":7,"nodeType":"171","messageId":"172","endLine":17,"endColumn":34},{"ruleId":"152","severity":1,"message":"173","line":8,"column":26,"nodeType":"150","messageId":"154","endLine":8,"endColumn":33},{"ruleId":"152","severity":1,"message":"174","line":9,"column":8,"nodeType":"150","messageId":"154","endLine":9,"endColumn":13},{"ruleId":"152","severity":1,"message":"164","line":45,"column":9,"nodeType":"150","messageId":"154","endLine":45,"endColumn":17},{"ruleId":"159","severity":1,"message":"175","line":105,"column":6,"nodeType":"166","endLine":105,"endColumn":31,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":244,"column":47,"nodeType":"179","messageId":"180","endLine":244,"endColumn":49},{"ruleId":"152","severity":1,"message":"181","line":6,"column":10,"nodeType":"150","messageId":"154","endLine":6,"endColumn":20},{"ruleId":"152","severity":1,"message":"182","line":1,"column":38,"nodeType":"150","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"152","severity":1,"message":"183","line":4,"column":8,"nodeType":"150","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"184","line":6,"column":10,"nodeType":"150","messageId":"154","endLine":6,"endColumn":29},{"ruleId":"152","severity":1,"message":"185","line":9,"column":22,"nodeType":"150","messageId":"154","endLine":9,"endColumn":35},{"ruleId":"159","severity":1,"message":"186","line":48,"column":6,"nodeType":"166","endLine":48,"endColumn":8,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"170","line":29,"column":7,"nodeType":"171","messageId":"172","endLine":29,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":52,"column":7,"nodeType":"171","messageId":"172","endLine":52,"endColumn":55},{"ruleId":"152","severity":1,"message":"188","line":21,"column":27,"nodeType":"150","messageId":"154","endLine":21,"endColumn":44},{"ruleId":"152","severity":1,"message":"189","line":21,"column":46,"nodeType":"150","messageId":"154","endLine":21,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":9,"column":1,"nodeType":"147","endLine":22,"endColumn":3},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-redeclare","'newState' is already defined.","Identifier","redeclared","no-unused-vars","'Component' is defined but never used.","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'errorVisible' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'clsx' is defined but never used.","'IconButton' is defined but never used.","'username' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coins', 'dispatch', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["192"],"'handleLogout' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'refresh' is defined but never used.","'store' is defined but never used.","React Hook useEffect has a missing dependency: 'lineSeries'. Either include it or remove the dependency array.",["193"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setTrigger' is defined but never used.","'useRef' is defined but never used.","'Immutable' is defined but never used.","'SettingsRemoteSharp' is defined but never used.","'setTotalValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'coins'. Either include it or remove the dependency array.",["194"],"'currentTotalValue' is assigned a value but never used.","'parentCallback' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [coins, dispatch, history, reload]",{"range":"201","text":"202"},"Update the dependencies array to be: [lineSeries, location.state.coinCode]",{"range":"203","text":"204"},"Update the dependencies array to be: [coins]",{"range":"205","text":"206"},[3602,3610],"[coins, dispatch, history, reload]",[2609,2634],"[lineSeries, location.state.coinCode]",[1332,1334],"[coins]"]